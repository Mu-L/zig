* Threaded: finish linux impl (all tests passing)
* Threaded: finish macos impl 
* Threaded: finish windows impl 
* Threaded: glibc impl of netLookup

* eliminate dependency on std.Thread (Mutex, Condition, maybe more)
* implement cancelRequest for non-linux posix
* finish converting all Threaded into directly calling system functions and handling EINTR
* audit the TODOs

* move max_iovecs_len to std.Io
* address the cancelation race condition (signal received between checkCancel and syscall)
* update signal values to be an enum
* delete the deprecated fs.File functions
* move fs.File.Writer to Io
* add non-blocking flag to net and fs operations, handle EAGAIN
* finish moving std.fs to Io
* migrate child process into std.Io
* eliminate std.Io.poll (it should be replaced by "select" functionality)
* finish moving all of std.posix into Threaded
* TCP fastopen - sends initial payload along with connection. can be done for idempotent http requests
